# E' possibile sfruttare lo Spring Cloud Config server anche per definire le configurazioni che riguardano sia
# il service proxy Zuul e relativi attributi riguardanti il routing che per le configurazioni di resilenza di Hystrix

# Una volta che vengono fatte delle modifiche occorre per√≤ richiamare l'end-point "/refresh" dello Zuul service proxy
# per aggiornare i valori forniti dal Spring Cloud Config

zuul.prefix:  "/api"
zuul.ignored-services: "organizationservice"
zuul.routes.organizationservice: "/organization/**"
#zuul.routes.licensingservice: /licensing/**
#zuul.routes.authenticationservice: /auth/**

# Configurazioni che riguardano il Mapping URL statico
#zuul.routes.licensestatic.path: /licensestatic/**
#zuul.routes.licensestatic.url:  http://licenseservice-static:8081
#zuul.routes.licensestatic.serviceId: licensestatic
#zuul.routes.licensestatic.ribbon.listOfServers: http://licenseservice-static1:8081, http://licenseservice-static2:8082
#ribbon.eureka.enabled: false

zuul.sensitiveHeaders: Cookie,Set-Cookie
zuul.debug.request: true

# Definisce la configurazione di default da utilizzare in generale per tutti i microservizi che vengono chiamati sfruttando Zuul
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 3500
# Definisce la configurazione specifica per il "licensingservice" che gira con Zuul
#hystrix.command.licensingservice.execution.isolation.thread.timeoutInMilliseconds: 2
# Possibile anche il timeout di default utilizzato invece da Ribbon
#licensingservice.ribbon.ReadTimeout: 2

#signing.key: "345345fsdfsf5345"
